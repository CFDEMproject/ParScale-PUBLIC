# LAMMPS library multiple-machine Makefile

SHELL = /bin/sh

# Definitions
ROOT =	pasc
EXE =	lib$(ROOT)_$@.a

SRC =	chemistry_reaction_single.cpp chemistry_reader.cpp chemistry_reader_simple.cpp comm.cpp container_base.cpp control.cpp coupling.cpp coupling_model.cpp coupling_model_json.cpp coupling_model_liggghts.cpp coupling_model_none.cpp custom_value_tracker.cpp driver.cpp error.cpp fluid_data.cpp input.cpp integrator.cpp integrator_cvode.cpp library_pasc.cpp  model_base.cpp model_chemistry_container.cpp model_chemistry.cpp model_chemistry_single_reaction.cpp model_container.cpp model_eqn_1D_cartesian.cpp model_eqn_1D_spherical.cpp model_eqn_container.cpp model_eqn.cpp model_eqn_shrinkingCore.cpp model_properties.cpp model_properties_exchange.cpp model_properties_porosity.cpp model_properties_thermodynamic.cpp output.cpp output_probe.cpp particle_data_container_properties.cpp particle_data.cpp particle_mesh.cpp pascal.cpp simulation_state.cpp chemistry_grainmodel.cpp


INC =	associative_pointer_array.h associative_pointer_array_I.h chemistry_reaction_single.h chemistry_reader.h chemistry_reader_simple.h comm.h container_base.h container_chemistry.h container_cvode.h container_general.h container_general_I.h container.h container_multi_vector.h container_scalar.h container_vector.h control.h coupling_base.h coupling.h coupling_model.h coupling_model_json.h coupling_model_liggghts.h coupling_model_none.h custom_value_tracker.h custom_value_tracker_I.h driver.h error_base.h error.h fluid_data.h input_base.h input.h input_I.h input_properties.h integrator_cvode.h integrator.h library_pasc.h math_extra_pascal.h memory_ns.h model_base.h model_chemistry_container.h model_chemistry.h model_chemistry_single_reaction.h model_container.h model_eqn_1D_cartesian.h model_eqn_1D_spherical.h model_eqn_container.h model_eqn.h model_eqn_shrinkingCore.h model_properties_exchange.h model_properties.h model_properties_porosity.h model_properties_thermodynamic.h mpi_pascal.h output.h output_probe.h particle_data_container_properties.h particle_data_container_properties_I.h particle_data.h particle_mesh.h pascal_base_accessible.h pascal_base.h pascal_base_interface.h pascal_base_interface_vector.h pascal.h psctype.h qjson_includes.h simulation_state.h style_coupling_model.h style_mesh.h style_model_chemistry.h style_model_eqn.h style_model.h vector_pascal.h version.h chemistry_grainmodel.h input_HDF5_I.h

OBJ =	$(SRC:.cpp=.o)

# Targets

help:
	@echo 'Type "make target" where target is one of:'
	@echo ''
	@files="`ls MAKE/Makefile.*`"; \
	for file in $$files; do head -1 $$file; done

clean:
	rm -rf Obj_*

.DEFAULT:
	@test -f MAKE/Makefile.$@
	@if [ ! -d Obj_$@ ]; then mkdir Obj_$@; fi
	@cp -p $(SRC) $(INC) Obj_$@
	@cp MAKE/Makefile.$@ Obj_$@/Makefile
	@cd Obj_$@; \
	$(MAKE) $(MFLAGS) "OBJ = $(OBJ)" "INC = $(INC)" "EXE = ../$(EXE)" lib
	@if [ -d Obj_$@ ]; then cd Obj_$@; rm -f $(SRC) $(INC) Makefile*; fi

